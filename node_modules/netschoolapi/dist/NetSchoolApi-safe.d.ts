/// <reference types="node" />
import Client, { InitRequest } from "./classes/Client";
import Session from "./classes/Session";
import Context from "./classes/Context";
import { Credentials as PhotoCredentials } from "./methods/photo";
import { Credentials as DiaryCredentials } from "./methods/diary";
import { Credentials as AssignmentCredentials } from "./methods/assignment";
import { Credentials as ScheduleDayCredentials } from "./methods/scheduleDay";
import { Credentials as ScheduleWeekCredentials } from "./methods/scheduleWeek";
import { Credentials as ReportFileCredentials } from "./methods/reportFile";
import { Credentials as GradesCredentials } from "./methods/grades";
import { Credentials as JournalCredentials } from "./methods/journal";
export interface Credentials {
    login: string;
    origin: string;
    school: number | string;
    password: string;
}
export default class NetSchoolApiSafe {
    context: null | Context;
    protected session: null | Session;
    protected client: Client;
    protected credentials: Credentials;
    /**
     * Создание пользователя
     * @param credentials Данные пользователя
     */
    constructor(credentials: Credentials);
    /** Произвольные запросы к сетевому */
    fetch(url: string, init?: InitRequest): Promise<import("node-fetch").Response>;
    /** Открытие сессии в "Сетевой город. Образование" */
    logIn(): Promise<Session | null>;
    /** Закрытие сессии в "Сетевой город. Образование" */
    logOut(): Promise<null>;
    /** Проверка сессии через API "Сетевой город. Образование"*/
    sessionValid(): Promise<boolean>;
    /** Информация пользователя */
    info(): Promise<import("./classes/Info").default>;
    /** Фото пользователя */
    photo(credentials?: PhotoCredentials): Promise<Buffer>;
    /** Дневник пользователя*/
    diary(credentials?: DiaryCredentials): Promise<import("./classes/Diary").default>;
    /** Информация о задание */
    assignment(credentials: AssignmentCredentials): Promise<import("./classes/AssignmentInfo").default>;
    /** Типы заданий */
    assignmentTypes(): Promise<import("./classes/AssignmentTypes").default>;
    /** Расписание на день */
    scheduleDay(credentials?: ScheduleDayCredentials): Promise<import("./classes/ScheduleDay").default>;
    /** Расписание на неделю */
    scheduleWeek(credentials?: ScheduleWeekCredentials): Promise<import("./classes/ScheduleWeek").default>;
    reportFile(credentials: ReportFileCredentials): Promise<string>;
    /** Отчет об успеваемости (по предмету) */
    grades(credentials: GradesCredentials): Promise<import("./classes/Grades").default>;
    /** Отчет об успеваемости (полный) */
    journal(credentials: JournalCredentials): Promise<import("./classes/Journal").default>;
}
