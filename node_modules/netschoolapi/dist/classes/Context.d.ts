interface User {
    id: number;
    name: string;
    classes: {
        id: number;
        name: string;
    }[];
    students: {
        id: number;
        name: string;
    }[];
}
interface Year {
    id: number;
    gId: number;
    name: string;
    start: Date;
    end: Date;
}
interface Server {
    id: string;
    timeFormat: string;
    dateFormat: string;
}
interface Subject {
    id: number;
    name: string;
}
interface School {
    id: number;
    name: string;
    fullName: string;
}
interface Credentials {
    user: User;
    year: Year;
    server: Server;
    school: School;
    subjects: Subject[];
}
export default class Context {
    readonly user: User;
    readonly year: Year;
    readonly server: Server;
    readonly school: School;
    readonly subjects: Subject[];
    constructor(credentials: Credentials);
    /** Проверяет является ли число частью года */
    checkDate(date: Date): boolean;
    /** Существует ли класс */
    classExists(id: number): boolean;
    /** ID первого класса */
    defaultClass(): number;
    /** Существует ли ученик */
    studentExists(id: number): boolean;
    /** ID первого ученика */
    defaultStudent(): number;
    /** Существует ли предмет */
    subjectExists(id: number): boolean;
}
export {};
